#Configurando um servico de rede no docker
networks:
    financasapp-network:    #Nome da rede
        driver: bridge      #Rede local interna do docker

#Configurando os servicos (containers)
services:
    
    sqlserver:  #Nome do servico ('hostname' dentro da rede)
        image: mcr.microsoft.com/mssql/server:2022-latest #Imagem oficial do sqlserver 2022
        container_name: financasapp-sqlserver #Nome do container
        networks: #Rede em que o servico ira rodar
            - financasapp-network
        ports:
            - "1434:1433" #porta externa (windows) : porta interna (docker)
        environment:
         - ACCEPT_EULA=Y            #Aceite dos termos de licenca do sqlserver
         - SA_PASSWORD=Coti@2025    #Senha do usuario SA (system admin)
    rabbitmq: #Nome do servico ('hostname' dentro da rede)
        image: rabbitmq:3-management #Imagem official do rabbitmq
        container_name: financasapp-rabbitmq #Nome do container
        networks: #Rede em que o servico ira rodar
            - financasapp-network
        ports:
            - "5672:5672" #Porta padrao para comunicacao do sistema com o RabbitMQ
            - "15672:15672" #Porta do painel de administracao do RabbitMQ
    app:
        build: #Indica que o container vai ser construido a partir do Dockerfile
            context: . #Diretorio atual do projeto
            dockerfile: FinancasApp.API/Dockerfile #Local do arquivo do Dockerfile
        container_name: financasapp-api #Nome do container
        networks: #Rede em que o servico ira rodar
            - financasapp-network
        ports:
            - "8081:8080" #porta externa (windows) : porta interna (docker)
        depends_on: #Define dependencias (ordem de inicializacao dos containers)
            - sqlserver #A aplicacao depende do servico do sqlserver
            - rabbitmq #A aplicacao depende do servico do sqlserver
